<?php

/**
 * @file
 * TrueFalse question type for the Quiz module.
 *
 * Allows the creation of "True or False" questions.
 */

/**
 * Implements hook_autoload_info().
 *
 * @return string[]
 */
function truefalse_autoload_info() {
  return array(
    'TrueFalseQuestion' => 'includes/TrueFalseQuestion.class.inc',
    'TrueFalseQuestionResponse' => 'includes/TrueFalseQuestionResponse.class.inc',
    'TrueFalseTestCase' => 'tests/truefalse.test',
  );
}

/**
 * Implements hook_config_info().
 */
function truefalse_config_info() {
  $prefixes['truefalse.settings'] = array(
    'label' => t('TrueFalse settings'),
    'group' => t('TrueFalse'),
  );
  return $prefixes;
}

/**
 * Implements hook_quiz_question_info().
 */
function truefalse_quiz_question_info() {
  return array(
    'truefalse' => array(
      'name' => t('True/false question'),
      'description' => t('Quiz questions that allow a user to select "true" or "false" as his response to a statement.'),
      'question provider' => 'TrueFalseQuestion',
      'response provider' => 'TrueFalseResponse',
      // All wrapper functions are in the quiz_question module.
      'module' => 'quiz_question',
    ),
  );
}

/**
 * Implements hook_quiz_question_config().
 */
function truefalse_quiz_question_config() {
  return FALSE;
}

/**
 * Implements hook_theme().
 */
function truefalse_theme() {
  return array(
    'truefalse_answering_form' => array(
      'render element' => 'form',
      'path' => backdrop_get_path('module', 'truefalse') . '/theme',
      'template' => 'truefalse-answering-form',
    ),
    'truefalse_response' => array(
      'variables' => array(
        'metadata' => array(),
        'data' => array(),
      ),
    ),
  );
}

/**
 * Theme the truefalse response form.
 *
 * @param array $variables
 *
 * @return string
 *   An HTML string.
 */
function theme_truefalse_response($variables) {
  $metadata = $variables['metadata'];
  $data = $variables['data'];
  $output = '';
  try {
    $output = theme('table', array('header' => $metadata, 'rows' => $data));
  }
  catch (Exception $e) {
    watchdog('TrueFalse', $e->getMessage());
  }
  return $output;
}

/**
 * Implements hook_field_extra_fields().
 */
function truefalse_field_extra_fields() {
  $extra['node']['truefalse'] = array(
    'form' => array(
      'correct_answer' => array(
        'label' => t('Correct answer'),
        'description' => t('The answer for this question.'),
        'weight' => -4,
      ),
    ),
  );
  return $extra;
}
