<?php

/**
 * @file
 * Matching questions install file.
 */

/**
 * Implements hook_install().
 */
function matching_install() {
  // Add body field to matching node.
  quiz_question_add_body_field('matching');
}

/**
 * Implements hook_schema().
 */
function matching_schema() {
  // Properties for a question nodes go in here:
  $schema['quiz_matching_properties'] = array(
    'fields' => array(
      'nid' => array(
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'vid' => array(
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'choice_penalty' => array(
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ),
    ),
    'primary key' => array(
      'nid', 'vid',
    ),
  );

  $schema['quiz_matching_node'] = array(
    'fields' => array(
      'match_id' => array(
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'nid' => array(
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'vid' => array(
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'question' => array(
        'type' => 'text',
        'not null' => TRUE,
      ),
      'answer' => array(
        'type' => 'text',
        'not null' => TRUE,
      ),
      'feedback' => array(
        'type' => 'text',
        'not null' => TRUE,
      ),
    ),
    'primary key' => array('match_id'),
    'indexes' => array(
      'question_id' => array('nid', 'vid'),
    ),
  );

  // User answers go in here.
  $schema['quiz_matching_user_answers'] = array(
    'fields' => array(
      'answer_id' => array(
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'match_id' => array(
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'result_answer_id' => array(
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'score' => array(
        'type' => 'int',
        'size' => 'tiny',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ),
      'answer' => array(
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
    ),
    'primary key' => array('answer_id'),
  );

  return $schema;
}

/**
 * Move Matching settings from variables to config.
 */
function matching_update_1000() {
  // Migrate variables to config.
  $config = config('matching.settings');
  $config->set('quiz_matching_form_size', update_variable_get('quiz_matching_form_size', 5));
  $config->set('quiz_matching_shuffle_options', update_variable_get('quiz_matching_shuffle_options', 1));
  $config->set('choice_penalty', update_variable_get('choice_penalty', 0));
  $config->save();

  // Delete variables.
  update_variable_del('quiz_matching_form_size');
  update_variable_del('quiz_matching_shuffle_options');
  update_variable_del('choice_penalty');
}

/**
 * Implements hook_update_last_removed().
 */
function matching_update_last_removed() {
  return 7501;
}
